---
import Badge from '@components/ui/Badge.astro';
import Container from '@components/ui/Container.astro';
import Layout from '@layouts/Layout.astro';
import { getAllPosts } from '@lib/content/posts.ts';

const posts = await getAllPosts();

const title = 'Blog';
const description = 'Articles and notes';
---

<Layout title={title} description={description}>
  <section class='py-16'>
    <Container>
      <h1 class='text-3xl font-bold mb-6'>Blog</h1>
      <div class="flex flex-wrap gap-4 mb-8">
        <label>
          <input
            id="search-input"
            type="search"
            placeholder="Search posts..."
            class="w-full sm:w-64 px-3 py-2 border border-[var(--color-border)] rounded-xl bg-[var(--color-muted)] dark:bg-[var(--color-card)] placeholder:opacity-60"
          />
        </label>
      </div>
      <ul id="posts-list" class="space-y-8">
        {posts.map(p => (
          <li class="post-item border border-[var(--color-border)] rounded-2xl p-6 bg-[var(--color-card)] shadow-[var(--shadow-soft)]"
              data-title={p.title.toLowerCase()}
              data-description={(p.description ?? '').toLowerCase()}
              data-tags={(p.tags ?? []).join(',').toLowerCase()}>
            <a href={`/blog/${p.slug}`} class="text-2xl font-semibold hover:underline text-[var(--color-primary)]">
              {p.title}
            </a>
            <div class="mt-1 text-sm opacity-70">
              {p.publishedAt && new Date(p.publishedAt).toLocaleDateString()}
            </div>
            <p class="mt-2 opacity-80 line-clamp-3">{p.description}</p>
            {p.tags?.length && (
              <div class="mt-3 flex flex-wrap gap-2">
                {p.tags.map(tag => (
                  <Badge variant="neutral">#{tag}</Badge>
                ))}
              </div>
            )}
          </li>
        ))}
      </ul>
      {posts.length === 0 && (
        <p class="mt-10 text-center opacity-70">No posts found.</p>
      )}
    </Container>
  </section>
</Layout>

<script>
  let currentTagFilter = '';

  function filterPosts() {
    const searchInput = document.getElementById('search-input') as HTMLInputElement;
    const searchTerm = searchInput.value.toLowerCase();
    const posts = document.querySelectorAll('.post-item');

    posts.forEach(post => {
      const postElement = post as HTMLElement;
      const title = postElement.dataset.title || '';
      const description = postElement.dataset.description || '';
      const tags = postElement.dataset.tags || '';

      const matchesSearch = searchTerm === '' ||
        title.includes(searchTerm) ||
        description.includes(searchTerm) ||
        tags.includes(searchTerm);

      const matchesTag = currentTagFilter === '' ||
        tags.split(',').includes(currentTagFilter);

      if (matchesSearch && matchesTag) {
        postElement.style.display = '';
      } else {
        postElement.style.display = 'none';
      }
    });
  }

  const searchInput = document.getElementById('search-input');
  searchInput?.addEventListener('input', filterPosts);
</script>
