---

---

<button
  id="theme-toggle"
  class="bg-primary text-primary-foreground hover:bg-primary/90 focus:ring-primary/50 relative inline-flex cursor-pointer items-center justify-center rounded-lg border-2 border-transparent p-3 text-base transition-all duration-200 ease-in-out focus:ring-2 focus:outline-none active:scale-95"
  type="button"
  aria-label="Toggle theme"
  aria-pressed="false"
>
  <svg
    class="sun-icon absolute h-5 w-5 scale-100 rotate-0 transition-all duration-300 dark:scale-0 dark:-rotate-90"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg
    class="moon-icon absolute h-5 w-5 scale-0 rotate-90 transition-all duration-300 dark:scale-100 dark:rotate-0"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
  <span class="sr-only">Toggle theme</span>
</button>

<script>
  (function createThemeToggle() {
    const STORAGE_KEY = 'theme';
    const DARK_CLASS = 'dark';

    const button = document.getElementById('theme-toggle') as HTMLButtonElement;
    const root = document.documentElement;

    if (!button) {
      console.warn('Theme toggle button not found');
      return;
    }

    const getStoredTheme = (): string | null => localStorage.getItem(STORAGE_KEY);

    const saveTheme = (theme: string): void => localStorage.setItem(STORAGE_KEY, theme);

    const getSystemPreference = (): boolean =>
      window.matchMedia('(prefers-color-scheme: dark)').matches;

    const isDarkThemeActive = (): boolean => root.classList.contains(DARK_CLASS);

    const applyTheme = (isDark: boolean): void => {
      if (isDark) {
        root.classList.add(DARK_CLASS);
      } else {
        root.classList.remove(DARK_CLASS);
      }
    };

    const updateButtonState = (): void => {
      const isDark = isDarkThemeActive();
      button.setAttribute('aria-pressed', isDark.toString());
    };

    const dispatchThemeChangeEvent = (isDark: boolean): void => {
      const event = new CustomEvent('themechange', {
        detail: { isDark, theme: isDark ? 'dark' : 'light' },
      });
      document.dispatchEvent(event);
    };

    const setInitialTheme = (): void => {
      const savedTheme = getStoredTheme();

      if (savedTheme) {
        applyTheme(savedTheme === 'dark');
      } else {
        const prefersDark = getSystemPreference();
        applyTheme(prefersDark);
      }
    };

    const handleToggle = (): void => {
      const isDark = isDarkThemeActive();
      const newTheme = !isDark;

      applyTheme(newTheme);
      saveTheme(newTheme ? 'dark' : 'light');
      updateButtonState();
      dispatchThemeChangeEvent(newTheme);
    };

    const init = (): void => {
      setInitialTheme();
      button.addEventListener('click', handleToggle);
      updateButtonState();
    };

    init();
  })();
</script>
